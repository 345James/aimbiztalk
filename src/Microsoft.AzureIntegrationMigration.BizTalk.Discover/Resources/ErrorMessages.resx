<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationDefinitionNotFoundInMsi" xml:space="preserve">
    <value>Unable to find an application definition file in the supplied BizTalk MSI file '{0}'. Unable to continue without a application definition file.</value>
  </data>
  <data name="BindingFileNotFoundInMSI" xml:space="preserve">
    <value>Unable to find a binding file called '{0}' in the supplied BizTalk MSI file '{1}'. Unable to continue without a binding file.</value>
  </data>
  <data name="ErrorMsiNotFound" xml:space="preserve">
    <value>The MSI file '{0}' was not found.</value>
  </data>
  <data name="ErrorOpeningApplicationDefinitionFile" xml:space="preserve">
    <value>There was an error opening application definition file '{0}'.  Details:\n{1}</value>
  </data>
  <data name="ErrorParsingMSIFile" xml:space="preserve">
    <value>An error occurred trying to parse the MSI file {0}. The error was: {1}.</value>
  </data>
  <data name="ErrorParsingMSIFileNoFiles" xml:space="preserve">
    <value>An error occurred trying to parse the MSI file {0}. The error was: No files found in the MSI file.</value>
  </data>
  <data name="ErrorProcessingMSIFile" xml:space="preserve">
    <value>An error occurred trying to process the files within the MSI file {0}. The error was: {1}.</value>
  </data>
  <data name="FailureWhenReadingBizTalkAssemblies" xml:space="preserve">
    <value>An error occurred whilst reading BizTalk Assemblies, in the directory '{0}'. Unable to continue.: Details:\n{1}</value>
  </data>
  <data name="FindResourceAssemblyError" xml:space="preserve">
    <value>Unable to load a {0} with type {1} because the assembly referenced in binding file is not included in list of assemblies supplied. Expected to find assembly called: {2}.</value>
  </data>
  <data name="GetResourcePrivateFieldError" xml:space="preserve">
    <value>Unable to load a {0} with type {2} from assembly {3} as unable to find a field called {1} in this type. Check that this is a BizTalk-created {0}.</value>
  </data>
  <data name="GetResourceTypeDetailsError" xml:space="preserve">
    <value>Unable to load type details from a supplied {0} node. Node inner text is: {1}.</value>
  </data>
  <data name="HandlerAnalysisError" xml:space="preserve">
    <value>The {0} handler encountered an error trying to analyze a {1} resource: {2}</value>
  </data>
  <data name="HandlerUnsupportedResourceType" xml:space="preserve">
    <value>The {0} handler is unable to support resources of type {1}.</value>
  </data>
  <data name="NoFullNameAttributeOnTransformNode" xml:space="preserve">
    <value>Unable to find an attribute called 'FullName' on the supplied transform node in the binding file.</value>
  </data>
  <data name="NoTransformFoundWithGivenName" xml:space="preserve">
    <value>Unable to find a Transform entity in the current parsed BizTalkApplication with a full name of: {0}.</value>
  </data>
  <data name="ParsingError" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="ParsingErrorNoHandlerFound" xml:space="preserve">
    <value>Unable to find a handler for this resource: {0}</value>
  </data>
  <data name="PipelineDeserializationError" xml:space="preserve">
    <value>Unable to deserialize pipeline: {0}</value>
  </data>
  <data name="PipelineParsingError" xml:space="preserve">
    <value>Error during pipeliine parsing: {0}</value>
  </data>
  <data name="ProcessModuleRefError" xml:space="preserve">
    <value>An error occurred whilst processing ModuleRefs from the the binding file in file {0}: {1}</value>
  </data>
  <data name="ProcessReceivePortError" xml:space="preserve">
    <value>An error occurred whilst processing ReceivePorts from the binding file in file {0}: {1}</value>
  </data>
  <data name="ProcessSchemaError" xml:space="preserve">
    <value>An error occurred whilst processing Schemas from the assembly file {0}: {1}</value>
  </data>
  <data name="ProcessTransformError" xml:space="preserve">
    <value>An error occurred whilst processing Transforms from the assembly file {0}: {1}</value>
  </data>
  <data name="SchemaFindAssemblyError" xml:space="preserve">
    <value>Unable to load a schema with type {0} because the assembly referenced in binding file is not included in list of assemblies supplied. Expected to find assembly called: {1}.</value>
  </data>
  <data name="UnableToFindDependentTypeInAssembly" xml:space="preserve">
    <value>Unable to load {0} type {1} from the assembly '{2}' as a dependent type can't be found. File Name is: {3}, FusionLog is {3}, error is: {4}</value>
  </data>
  <data name="UnableToFindTypeInAssembly" xml:space="preserve">
    <value>Unable to find a {0} type called {1} in the assembly '{2}'.</value>
  </data>
  <data name="UnableToLoadAssembly" xml:space="preserve">
    <value>An error occurred whilst loading the assembly file {0}: {1}</value>
  </data>
  <data name="UnableToLoadDependentTypeInAssembly" xml:space="preserve">
    <value>Unable to load {0} type {1} from the assembly '{2}' as a dependent type can't be loaded. File Name is: {3}, FusionLog is {4}, error is: {5}</value>
  </data>
  <data name="UnsupportedParsedApplication" xml:space="preserve">
    <value>The supplied IParsedApplication instance is unsupported: Expected type {0}, received type {1}.</value>
  </data>
  <data name="WorkingDirectoryCannotBeNull" xml:space="preserve">
    <value>WorkingDirectory cannot be null.</value>
  </data>
</root>